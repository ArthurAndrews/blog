distinct(age, centered_age) |>
mutate(
mean_player = tibble(centered_age) |>
predict(object = model, re.form = ~0)
)
hit |>
filter(name %in% players) |>
left_join(cf, by = join_by(name == level)) |>
mutate(
player = tibble(name, age, centered_age) |>
predict(object = model),
name = name |>
reorder(-abs(estimate))
) |>
ggplot() +
aes(x = age, color = "player") + geom_point(aes(y = ops)) + geom_line(aes(y = player)) +
geom_line(aes(x = age, y = mean_player, color = "mean_player"), data = mean_player) +
scale_color_manual(values = c("player" = "grey30", "mean_player" = pal[2])) +
facet_wrap(~name + estimate)
}
predict_player("Miguel Cabrera", model2)
#| fig-width: 10
#| fig-height: 8
cf |>
slice_max(estimate, n = 16, with_ties = FALSE) |>
pull(level) |>
predict_player(model2)
#| fig-width: 10
#| fig-height: 8
cf |>
slice_min(estimate, n = 16, with_ties = FALSE) |>
pull(level) |>
predict_player(model2)
save(hit, model1, model2, file = "../../data/ops_models.RData")
# model4 <- lmer(
#   ops ~ (centered_age | position/name) + bs(centered_age, df = 3),
#   data = hit
# )
# hit |>
#   distinct(position, age, centered_age) |>
#   mutate(name = NA_character_) |>
#   add_prediction(model4, allow.new.levels = TRUE) |>
#   ggplot() +
#   aes(age, pred_ops, color = position) + geom_line() #+
#   #facet_wrap(~position)
hit |>
group_by(season) |>
summarize(rows = n(), hitters = n_distinct(id)) |>
tabulate(defaultPageSize = Inf)
hit |>
group_by(season) |>
summarize(rows = n(), hitters = n_distinct(id))
hit |>
group_by(season) |>
summarize(rows = n(), hitters = n_distinct(id)) |> tabulate()
hit |>
group_by(season) |>
summarize(rows = n(), hitters = n_distinct(id)) |>
tabulate(defaultPageSize = 100)
# smaller set of columns
hit <- hitter |>
mutate(
team_id = team_link |>
str_sub(15, 17) |>
as.numeric()
)
# smaller set of columns
hit <- hitter |>
mutate(
team_id = team_link |>
str_sub(15, 17) |>
as.numeric()
) |>
select(
season,
id = player_id, name = player_full_name, position, height, weight,
team_name, team_id,
ab = at_bats, pa = plate_appearances, age, avg, obp, slg, ops
) |>
arrange(id, season) |>
group_by(id) |>
mutate(n_seasons = n_distinct(season)) |>
ungroup() |>
mutate(
across(c(avg:ops), as.numeric),
centered_age = age - mean(age)
)
# save
save(hitter, player, hit, file = "data/hitting_stats.RData")
load("../../data/ops_models.RData")
save(hit, model1, model2, file = "../../data/ops_models.RData")
hit <- hit |>
filter(name != "Tyler O'Neill") |>
bind_rows(
hitter |>
select(any_of(colnames(hit)))
)
player_to_join <- player |>
select(id, birth_date, position = primary_position_abbreviation, height, weight)
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric)
)
library(magrittr, include.only = "divide_by")
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric)
)
library(magrittr, include.only = "divide_by")
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric)
)
divide_by <- magrittr::divide_by
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric)
)
# smaller set of columns
hit <- hitter |>
mutate(
team_id = team_link |>
str_sub(15, 17) |>
as.numeric()
) |>
select(
season,
id = player_id, name = player_full_name, position, height, weight,
team_name, team_id,
ab = at_bats, pa = plate_appearances, age, avg, obp, slg, ops
) |>
arrange(id, season) |>
group_by(id) |>
mutate(n_seasons = n_distinct(season)) |>
ungroup() |>
mutate(
mean_age = mean(age),
centered_age = age - mean_age
)
# save
save(hitter, player, hit, file = "data/hitting_stats.RData")
hit <- hit |>
filter(name != "Tyler O'Neill") |>
bind_rows(
hitter |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
hit
hitter |>
filter(player_name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
hit <- hit |>
filter(name != "Tyler O'Neill") |>
bind_rows(
hitter |>
rename(name = player_full_name) |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
hit
hit |> filter(name |> str_detect("Tyler"))
hit |> filter(name |> str_detect("O'Neill"))
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric),
ab = at_bats, pa = plate_appearances, name = player_full_name, id = player_id
)
# join birth date and calculate age at mid-season
hitter <- hitter |>
select(-any_of(colnames(player_to_join))) |>
left_join(
player_to_join,
by = join_by(player_id == id)
) |>
mutate(
across(birth_date, as_date),
mid_season = str_glue("{season}-07-1") |>
as_date(),
age = (mid_season - birth_date) |>
as.numeric(units = "days") |>
divide_by(365.25),
across(c(avg, obp, slg, ops), as.numeric),
team_id = team_link |>
str_sub(15, 17) |>
as.numeric(),
ab = at_bats, pa = plate_appearances, name = player_full_name, id = player_id
)
# smaller set of columns
hit <- hitter |>
select(
season,
id, name, position, height, weight,
team_name, team_id,
ab, pa, age, avg, obp, slg, ops
) |>
arrange(id, season) |>
group_by(id) |>
mutate(n_seasons = n_distinct(season)) |>
ungroup() |>
mutate(
mean_age = mean(age),
centered_age = age - mean_age
)
# save
save(hitter, player, hit, file = "data/hitting_stats.RData")
hit <- hit |>
filter(name != "Tyler O'Neill") |>
bind_rows(
hitter |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
hit
hit |> filter(name == "Tyler O'Neill")
form <- formula(model2)
model <- lmer(form, hit, weights = hit$pa/700)
model
model3 <- lmer(form, hit, weights = hit$pa/700)
model2
model3
hit <- hit |>
filter(n_seasons >= 5 | name == "Tyler O'Neill") |>
bind_rows(
hitter |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
hit2
load("../../data/hitting_stats.RData")
hit_to <- hit |>
filter(n_seasons >= 5 | name == "Tyler O'Neill") |>
bind_rows(
hitter |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
form <- formula(model2)
model3 <- lmer(form, hit_to, weights = hit_to$pa/700)
model2
model3
of <- hit_to |>
filter(name %in% iq$name)
of
of_2025 <- of |>
filter(season == 2025)
of_2025
of_2025 <- of |>
filter(season == 2024)
filter(season == 2024)
of_2025
of |> count(name)
hit_to <- hit |>
filter(n_seasons >= 5 | name == "Tyler O'Neill") |>
bind_rows(
hitter |>
filter(name == "Tyler O'Neill") |>
select(any_of(colnames(hit)))
)
hit_to |> count(name)
iq$name
hit_to |> distinct(name)
hit_to |> distinct(name) |> filter(name %in% iq$name)
to <- "Tyler O'Neill"
to %in% iq$name
iq$name
iq <- read_csv("data-inquirer-outfielders.csv", skip = 4) |>
mutate(
name = name |>
str_replace("Hernandez", "Hernández") |>
str_replace("O’Neill", "O'Neill")
)
to <- "Tyler O'Neill"
hit_to <- hit |>
filter(n_seasons >= 5 | name == to) |>
bind_rows(
hitter |>
filter(name == to) |>
select(any_of(colnames(hit)))
)
to <- "Tyler O'Neill"
hit_to <- hit |>
filter(n_seasons >= 5 | name == to) |>
bind_rows(
hitter |>
filter(name == to) |>
select(any_of(colnames(hit)))
)
of <- hit_to |>
filter(name %in% iq$name)
of_2024 <- of |>
filter(season == 2024)
of_2024
to <- "Tyler O'Neill"
hit_to <- hit |>
filter(n_seasons >= 5, name != to) |>
bind_rows(
hitter |>
filter(name == to) |>
select(any_of(colnames(hit)))
)
to <- "Tyler O'Neill"
hit_to <- hit |>
filter(n_seasons >= 5 | name == to)
hit_to
form <- formula(model2)
model3 <- lmer(form, hit_to, weights = hit_to$pa/700)
of <- hit_to |>
filter(name %in% iq$name)
of_2024 <- of |>
filter(season == 2024)
View(of_2024)
of_2025 <- of_2024 |>
mutate(
across(c(mean_age, centered_age), \(x) x + 1),
across(ab:ops, \(x) NA)
)
of_2025
of_2025 <- of_2024 |>
mutate(
across(c(mean_age, centered_age), \(x) x + 1),
across(team_name, team_id, ab:ops, \(x) NA)
)
of_2025 <- of_2024 |>
mutate(
across(c(mean_age, centered_age), \(x) x + 1),
across(c(team_name, team_id, ab:ops), \(x) NA)
)
of_2025
of_2025 <- of_2024 |>
mutate(
across(c(mean_age, centered_age), \(x) x + 1)
) |>
select(-c(team_name:n_seasons))
of_2025
of_2025 <- of_2024 |>
mutate(
across(c(age, centered_age), \(x) x + 1)
) |>
select(-c(team_name:n_seasons))
of_2024
of_2025 <- of_2024 |>
mutate(
across(c(age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of_2025
of$pred_ops <- predict(model3, of)
of
of |>
filter(season %in% 2024:2025) |>
group_by(name) |>
arrange(season) |>
summarize(
across(c(position, team_name, age), first),
ops_2024 = ops[1],
ops_2025 = pred_ops[2]
)
)
of |>
filter(season %in% 2024:2025) |>
group_by(name) |>
arrange(season) |>
summarize(
across(c(position, team_name, age), first),
ops_2024 = ops[1],
ops_2025 = pred_ops[2]
)
of
of |> filter(name == "Juan Soto")
of |> filter(name == "Juan Soto") |> glimpse()
of_2025 <- of_2024 |>
mutate(
across(c(season, age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of <- hit_to |>
filter(name %in% iq$name)
of_2024 <- of |>
filter(season == 2024)
of_2025 <- of_2024 |>
mutate(
across(c(season, age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of_2024
of <- hit_to |>
filter(name %in% iq$name) |>
mutate(season == as.numeric(season))
of_2024 <- of |>
filter(season == 2024)
of_2025 <- of_2024 |>
mutate(
across(c(season, age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of
of <- hit_to |>
filter(name %in% iq$name) |>
mutate(season == as.numeric(season))
of_2024 <- of |>
filter(season == 2024)
of_2025 <- of_2024 |>
mutate(
across(c(season, age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of <- hit_to |>
filter(name %in% iq$name) |>
mutate(season == as.numeric(season))
of <- hit_to |>
filter(name %in% iq$name) |>
mutate(season = as.numeric(season))
of_2024 <- of |>
filter(season == 2024)
of_2025 <- of_2024 |>
mutate(
across(c(season, age, centered_age), \(x) x + 1)
) |>
select(season:weight, age, centered_age)
of <- of |>
bind_rows(of_2025)
of$pred_ops <- predict(model3, of)
of |>
filter(season %in% 2024:2025) |>
group_by(name) |>
arrange(season) |>
summarize(
across(c(position, team_name, age), first),
ops_2024 = ops[season == 2024],
ops_2025 = pred_ops[season == 2025]
)
of |>
filter(season %in% 2024:2025) |>
group_by(name) |>
arrange(season) |>
summarize(
across(c(position, team_name, age), first),
ops_2024 = ops[season == 2024],
ops_2025 = pred_ops[season == 2025]
) |>
arrange(desc(opt_2024))
of |>
filter(season %in% 2024:2025) |>
group_by(name) |>
arrange(season) |>
summarize(
across(c(position, team_name, age), first),
ops_2024 = ops[season == 2024],
ops_2025 = pred_ops[season == 2025]
) |>
arrange(desc(ops_2024))
